generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int          @id @default(autoincrement())
  name            String
  lastname        String
  status          Int          @default(0)
  overall         Int?
  evaluation_type Int
  code            String?      @db.VarChar(9)
  date_finished   DateTime?
  grammar         Int?
  vocabulary      Int?
  coherence       Int?
  softskills      String?
  Questions       Questions[]
  Evaluation      Evaluation   @relation(fields: [evaluation_type], references: [id])
  UserSkills      UserSkills[]
}

model Evaluation {
  id   Int    @id @default(autoincrement())
  name String
  User User[]
}

model QuestionPool {
  id           Int         @id @default(autoincrement())
  instruction  String
  categoria    String
  audio_path   String?
  min_time     Int
  max_time     Int
  value        Int
  description  String?
  subcategoria String?
  Questions    Questions[]
}

model Questions {
  id           Int          @id @default(autoincrement())
  questionid   Int
  userid       Int
  score        Int
  transcript   String
  video_path   String
  grammar      Int?
  vocabulary   Int?
  coherence    Int?
  completed    Int?
  softskills   String?
  QuestionPool QuestionPool @relation(fields: [questionid], references: [id], map: "Questions_question_id_fkey")
  User         User         @relation(fields: [userid], references: [id], map: "Questions_user_id_fkey")
}

model SoftSkills {
  id         Int          @id @default(autoincrement())
  name       String
  UserSkills UserSkills[]
}

model UserSkills {
  id         Int        @id @default(autoincrement())
  skill_id   Int
  user_id    Int
  SoftSkills SoftSkills @relation(fields: [skill_id], references: [id])
  User       User       @relation(fields: [user_id], references: [id])
}
