name: 🚀 Deploy
on:
  push:
    branches:
      - main
      - dev
    tags:
      - "*"
  pull_request: {}
permissions:
  actions: write
  contents: read

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_LIGHTSAIL_SERVICE_NAME: wizetalk-dev
  
jobs:
  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    environment: dev
    # needs: [lint, cypress]
    # only build/deploy main branch on pushes
    if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && github.event_name == 'push' }}

    env:
      NODE_ENV: production

    steps:
      - name: 🛑 Cancel Previous Runs
        if: ${{ env.GITHUB_ACTOR != 'nektos/act' }}
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 👀 Read app props
        uses: Muchaszewski/read-json-action@1.0.0
        id: app_props
        with:
          path: "package.json"
          properties: "[name, engines.node]"

      - name: Prepare Server For Build
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.LIGHTSAIL_IP }}
          username: ${{ secrets.LIGHTSAIL_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            rm -rf ~/itesm-socioformador-ene-feb-2023-equipo-6/tmp/
            mkdir -p ~/itesm-socioformador-ene-feb-2023-equipo-6/tmp

      - name: Copy Files To Lightsail Instance
        uses: wlixcc/SFTP-Deploy-Action@v1.0
        with:
          username: ${{ secrets.LIGHTSAIL_USER }}
          server: ${{ secrets.LIGHTSAIL_IP }}
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          local_path: "./*"
          remote_path: "/home/admin/itesm-socioformador-ene-feb-2023-equipo-6/tmp"
          args: "-o ConnectTimeout=60"

      - name: Configure Server
        uses: appleboy/ssh-action@master
        env:
          DATABASE_URL: postgresql://${{ secrets.DB_USERNAME }}:${{ secrets.DB_PWD }}@${{ secrets.DB_ACCESSPOINT }}/postgres
          SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_KEY: ${{ secrets.AWS_KEY }}
          AWS_SECRET: ${{ secrets.AWS_SECRET }}
          COGNITO_POOLID: ${{ secrets.COGNITO_POOLID }}
          BUCKET_MP4: ${{ secrets.BUCKET_MP4 }}
          BUCKET_MP3: ${{ secrets.BUCKET_MP3 }}
          BUCKET_TXT: ${{ secrets.BUCKET_TXT }}
          OPEN_AI: ${{ secrets.OPEN_AI }}
        with:
          timeout: 60s
          command_timeout: 30m
          envs: DATABASE_URL,SESSION_SECRET,AWS_REGION,AWS_KEY,AWS_SECRET,COGNITO_POOLID,BUCKET_MP4,BUCKET_MP3,BUCKET_TXT,OPEN_AI
          host: ${{ secrets.LIGHTSAIL_IP }}
          username: ${{ secrets.LIGHTSAIL_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script_stop: true
          script: |
            # ignore failure on pm2 stop (first time?)
            pm2 stop all || true

            echo "* Step: * Replace app folders"
            rm -rf ~/itesm-socioformador-ene-feb-2023-equipo-6/app
            mkdir -p ~/itesm-socioformador-ene-feb-2023-equipo-6/app
            cp -R ~/itesm-socioformador-ene-feb-2023-equipo-6/tmp/. ~/itesm-socioformador-ene-feb-2023-equipo-6/app/
            cd ~/itesm-socioformador-ene-feb-2023-equipo-6/app

            echo "*** Step: *** Create .env file"
            echo DATABASE_URL="$DATABASE_URL" >> .env
            echo SESSION_SECRET="$SESSION_SECRET" >> .env
            echo AWS_REGION="$AWS_REGION" >> .env
            echo AWS_KEY="$AWS_KEY" >> .env
            echo AWS_SECRET="$AWS_SECRET" >> .env
            echo COGNITO_POOLID="$COGNITO_POOLID" >> .env
            echo BUCKET_MP4="$BUCKET_MP4" >> .env
            echo BUCKET_MP3="$BUCKET_MP3" >> .env
            echo BUCKET_TXT="$BUCKET_TXT" >> .env
            echo OPEN_AI="$OPEN_AI" >> .env

            echo "*** Step: *** Generate DB"
            npm install
            npx prisma generate
            pm2 start "npm run dev"